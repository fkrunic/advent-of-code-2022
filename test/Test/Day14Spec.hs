module Test.Day14Spec (spec) where

import Data.Either (fromRight)
import Data.Map qualified as M
import Data.Maybe (fromJust, fromMaybe)
import Data.Text (Text)
import Data.Text qualified as T

import Problems.Day14 (
  DrawPath,
  Element,
  chainPath,
  defineGrid,
  defineGridNoAbyss,
  renderGrid,
  fillNStep,
  fillStep,
  fillStepSourceBlock,
  pDrawPath,
  pointsAlong,
 )

import Utilities.Grids (Grid, point)
import Text.Megaparsec (optional, runParser, some)
import Text.Megaparsec.Char (newline)

import Test.Tasty
import Test.Tasty.HUnit

spec :: TestTree
spec =
  testGroup "Day 14 Tests" $
    [ testGroup "Parsing Tests" $
        [ testCase "Parsing Single Lines" $
            let expected =
                  [ point 498 4
                  , point 498 6
                  , point 496 6
                  ]
                actual = runParser pDrawPath "" "498,4 -> 498,6 -> 496,6"
            in actual @?= Right expected

        , testCase "Parsing Full Example" $
            let expected =
                  [ [point 498 4, point 498 6, point 496 6]
                  , [point 503 4, point 502 4, point 502 9, point 494 9]
                  ]
                actual =
                  parser
                    "498,4 -> 498,6 -> 496,6\n503,4 -> 502,4 -> 502,9 -> 494,9"
            in actual @?= expected
        ]
  , testGroup "Points Along Tests" $
      [ testCase "Points along (1,1) and (1,3)" $
          let start = point 1 1
              middle = point 1 2
              end = point 1 3
          in do 
            pointsAlong start end @?= Just [start, middle, end]
            pointsAlong end start @?= Just [end, middle, start]

      , testCase "Points along (4,1) and (1,1)" $
          let start = point 4 1
              m1 = point 3 1
              m2 = point 2 1
              end = point 1 1
          in do 
            pointsAlong start end @?= Just [start, m1, m2, end]
            pointsAlong end start @?= Just [end, m2, m1, start]

      , testCase "No points along (1,1) and (3,3)" $
          let start = point 1 1
              end = point 3 3
          in do
            pointsAlong start end @?= Nothing
            pointsAlong end start @?= Nothing

      , testCase "Chaining points (1,1) -> (3,1) -> (3,3)" $
          chainPath [point 1 1, point 3 1, point 3 3]
            @?= Just
              [ point 1 1
              , point 2 1
              , point 3 1
              , point 3 2
              , point 3 3
              ]

      , testCase "Chaining points (5,1) -> (1,1) -> (1,5)" $
          chainPath [point 5 1, point 1 1, point 1 5]
            @?= Just
              [ point 5 1
              , point 4 1
              , point 3 1
              , point 2 1
              , point 1 1
              , point 1 2
              , point 1 3
              , point 1 4
              , point 1 5
              ]

      , testCase "No points along (1,1) -> (4,1) -> (5,3)" $
          chainPath [point 1 1, point 4 1, point 5 3] @?= Nothing
      ]
    , testGroup "Rendering Grid" $
        [ testCase "Drawing a grid with no sand" $
            let actual = renderGrid exampleGrid
                expected =
                  T.intercalate
                    "\n"
                    [ "............"
                    , ".......+...."
                    , "............"
                    , "............"
                    , "............"
                    , ".....#...##."
                    , ".....#...#.."
                    , "...###...#.."
                    , ".........#.."
                    , ".........#.."
                    , ".#########.."
                    , "************"
                    ]
            in actual @?= expected

        , testCase "First sand pebble dropped" $
            let actual = renderGrid $ fromJust $ fillStep exampleGrid
                expected =
                  T.intercalate
                    "\n"
                    [ "............"
                    , ".......+...."
                    , "............"
                    , "............"
                    , "............"
                    , ".....#...##."
                    , ".....#...#.."
                    , "...###...#.."
                    , ".........#.."
                    , ".......o.#.."
                    , ".#########.."
                    , "************"
                    ]
            in actual @?= expected

        , testCase "Second sand pebble dropped" $
            let actual = renderGrid $ fromJust $ fillNStep 2 exampleGrid
                expected =
                  T.intercalate
                    "\n"
                    [ "............"
                    , ".......+...."
                    , "............"
                    , "............"
                    , "............"
                    , ".....#...##."
                    , ".....#...#.."
                    , "...###...#.."
                    , ".........#.."
                    , "......oo.#.."
                    , ".#########.."
                    , "************"
                    ]
            in actual @?= expected

        , testCase "Five pebbles dropped" $
            let actual = renderGrid $ fromJust $ fillNStep 5 exampleGrid
                expected =
                  T.intercalate
                    "\n"
                    [ "............"
                    , ".......+...."
                    , "............"
                    , "............"
                    , "............"
                    , ".....#...##."
                    , ".....#...#.."
                    , "...###...#.."
                    , ".......o.#.."
                    , ".....oooo#.."
                    , ".#########.."
                    , "************"
                    ]
            in actual @?= expected

        , testCase "22 pebbles dropped" $
            let actual = renderGrid $ fromJust $ fillNStep 22 exampleGrid
                expected =
                  T.intercalate
                    "\n"
                    [ "............"
                    , ".......+...."
                    , "............"
                    , ".......o...."
                    , "......ooo..."
                    , ".....#ooo##."
                    , ".....#ooo#.."
                    , "...###ooo#.."
                    , ".....oooo#.."
                    , "....ooooo#.."
                    , ".#########.."
                    , "************"
                    ]
            in actual @?= expected

        , testCase "24 pebbles dropped" $
            let actual = renderGrid $ fromJust $ fillNStep 24 exampleGrid
                expected =
                  T.intercalate
                    "\n"
                    [ "............"
                    , ".......+...."
                    , "............"
                    , ".......o...."
                    , "......ooo..."
                    , ".....#ooo##."
                    , "....o#ooo#.."
                    , "...###ooo#.."
                    , ".....oooo#.."
                    , "..o.ooooo#.."
                    , ".#########.."
                    , "************"
                    ]
            in actual @?= expected

        , testCase "25+ pebbles dropped" $ do
            fillNStep 25 exampleGrid @?= Nothing
            fillNStep 30 exampleGrid @?= Nothing
            fillNStep 100 exampleGrid @?= Nothing
        ]
  , testGroup "Puzzle Solutions" $
      [ testCase "Example Input - Part 1" $
          part1Solution exampleInput @?= 24

      , testCase "Part 1 Solution" $
          part1Solution puzzleInput @?= 843

      , testCase "Example Input - Part 2" $
          part2Solution exampleInput @?= 93

      , testCase "Part 2 Solution" $
          part2Solution puzzleInput @?= 27625
      ]
    ]

exampleGrid :: Grid Element
exampleGrid = fromMaybe M.empty $ defineGrid paths
 where
  paths =
    [ [point 498 4, point 498 6, point 496 6]
    , [point 503 4, point 502 4, point 502 9, point 494 9]
    ]

parser :: Text -> [DrawPath]
parser = fromRight [] . runParser (some (pDrawPath <* optional newline)) ""

part1Solution :: Text -> Int
part1Solution = iter 0 . fromMaybe M.empty . defineGrid . parser
 where
  iter :: Int -> Grid Element -> Int
  iter n grid =
    case fillStep grid of
      Just g' -> iter (n + 1) g'
      Nothing -> n

part2Solution :: Text -> Int
part2Solution = iter 0 . fromMaybe M.empty . defineGridNoAbyss . parser
 where
  iter :: Int -> Grid Element -> Int
  iter n grid =
    case fillStepSourceBlock grid of
      Just g' -> iter (n + 1) g'
      Nothing -> n + 1

exampleInput :: Text
exampleInput = "498,4 -> 498,6 -> 496,6\n503,4 -> 502,4 -> 502,9 -> 494,9"

puzzleInput :: Text
puzzleInput =
  T.intercalate
    "\n"
    [ "476,71 -> 481,71"
    , "484,52 -> 488,52"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "481,61 -> 485,61"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "454,163 -> 459,163"
    , "444,147 -> 449,147"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "459,73 -> 464,73"
    , "447,150 -> 447,154 -> 440,154 -> 440,160 -> 455,160 -> 455,154 -> 453,154 -> 453,150"
    , "447,150 -> 447,154 -> 440,154 -> 440,160 -> 455,160 -> 455,154 -> 453,154 -> 453,150"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "447,150 -> 447,154 -> 440,154 -> 440,160 -> 455,160 -> 455,154 -> 453,154 -> 453,150"
    , "472,64 -> 476,64"
    , "447,144 -> 452,144"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "487,61 -> 491,61"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "484,64 -> 488,64"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "484,76 -> 484,80 -> 482,80 -> 482,83 -> 493,83 -> 493,80 -> 487,80 -> 487,76"
    , "455,169 -> 460,169"
    , "496,23 -> 496,16 -> 496,23 -> 498,23 -> 498,22 -> 498,23 -> 500,23 -> 500,17 -> 500,23 -> 502,23 -> 502,21 -> 502,23"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "447,150 -> 447,154 -> 440,154 -> 440,160 -> 455,160 -> 455,154 -> 453,154 -> 453,150"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "496,23 -> 496,16 -> 496,23 -> 498,23 -> 498,22 -> 498,23 -> 500,23 -> 500,17 -> 500,23 -> 502,23 -> 502,21 -> 502,23"
    , "447,150 -> 447,154 -> 440,154 -> 440,160 -> 455,160 -> 455,154 -> 453,154 -> 453,150"
    , "480,73 -> 485,73"
    , "462,71 -> 467,71"
    , "496,23 -> 496,16 -> 496,23 -> 498,23 -> 498,22 -> 498,23 -> 500,23 -> 500,17 -> 500,23 -> 502,23 -> 502,21 -> 502,23"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "487,55 -> 491,55"
    , "478,58 -> 482,58"
    , "487,48 -> 487,49 -> 494,49 -> 494,48"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "477,87 -> 477,88 -> 486,88"
    , "477,87 -> 477,88 -> 486,88"
    , "493,61 -> 497,61"
    , "458,117 -> 458,121 -> 450,121 -> 450,125 -> 471,125 -> 471,121 -> 463,121 -> 463,117"
    , "496,23 -> 496,16 -> 496,23 -> 498,23 -> 498,22 -> 498,23 -> 500,23 -> 500,17 -> 500,23 -> 502,23 -> 502,21 -> 502,23"
    , "454,144 -> 459,144"
    , "447,150 -> 447,154 -> 440,154 -> 440,160 -> 455,160 -> 455,154 -> 453,154 -> 453,150"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "458,117 -> 458,121 -> 450,121 -> 450,125 -> 471,125 -> 471,121 -> 463,121 -> 463,117"
    , "458,117 -> 458,121 -> 450,121 -> 450,125 -> 471,125 -> 471,121 -> 463,121 -> 463,117"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "450,141 -> 455,141"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "484,76 -> 484,80 -> 482,80 -> 482,83 -> 493,83 -> 493,80 -> 487,80 -> 487,76"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "484,76 -> 484,80 -> 482,80 -> 482,83 -> 493,83 -> 493,80 -> 487,80 -> 487,76"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "446,128 -> 446,131 -> 442,131 -> 442,138 -> 452,138 -> 452,131 -> 450,131 -> 450,128"
    , "493,27 -> 493,28 -> 512,28 -> 512,27"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "493,27 -> 493,28 -> 512,28 -> 512,27"
    , "481,55 -> 485,55"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "447,150 -> 447,154 -> 440,154 -> 440,160 -> 455,160 -> 455,154 -> 453,154 -> 453,150"
    , "484,76 -> 484,80 -> 482,80 -> 482,83 -> 493,83 -> 493,80 -> 487,80 -> 487,76"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "462,169 -> 467,169"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "484,76 -> 484,80 -> 482,80 -> 482,83 -> 493,83 -> 493,80 -> 487,80 -> 487,76"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "446,128 -> 446,131 -> 442,131 -> 442,138 -> 452,138 -> 452,131 -> 450,131 -> 450,128"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "458,117 -> 458,121 -> 450,121 -> 450,125 -> 471,125 -> 471,121 -> 463,121 -> 463,117"
    , "446,128 -> 446,131 -> 442,131 -> 442,138 -> 452,138 -> 452,131 -> 450,131 -> 450,128"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "465,69 -> 470,69"
    , "448,169 -> 453,169"
    , "478,64 -> 482,64"
    , "496,23 -> 496,16 -> 496,23 -> 498,23 -> 498,22 -> 498,23 -> 500,23 -> 500,17 -> 500,23 -> 502,23 -> 502,21 -> 502,23"
    , "484,76 -> 484,80 -> 482,80 -> 482,83 -> 493,83 -> 493,80 -> 487,80 -> 487,76"
    , "490,58 -> 494,58"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "484,58 -> 488,58"
    , "491,43 -> 491,44 -> 500,44 -> 500,43"
    , "472,69 -> 477,69"
    , "446,128 -> 446,131 -> 442,131 -> 442,138 -> 452,138 -> 452,131 -> 450,131 -> 450,128"
    , "496,23 -> 496,16 -> 496,23 -> 498,23 -> 498,22 -> 498,23 -> 500,23 -> 500,17 -> 500,23 -> 502,23 -> 502,21 -> 502,23"
    , "496,23 -> 496,16 -> 496,23 -> 498,23 -> 498,22 -> 498,23 -> 500,23 -> 500,17 -> 500,23 -> 502,23 -> 502,21 -> 502,23"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "496,23 -> 496,16 -> 496,23 -> 498,23 -> 498,22 -> 498,23 -> 500,23 -> 500,17 -> 500,23 -> 502,23 -> 502,21 -> 502,23"
    , "491,43 -> 491,44 -> 500,44 -> 500,43"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "458,117 -> 458,121 -> 450,121 -> 450,125 -> 471,125 -> 471,121 -> 463,121 -> 463,117"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "473,73 -> 478,73"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "468,67 -> 473,67"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "458,117 -> 458,121 -> 450,121 -> 450,125 -> 471,125 -> 471,121 -> 463,121 -> 463,117"
    , "490,64 -> 494,64"
    , "466,73 -> 471,73"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "451,147 -> 456,147"
    , "469,71 -> 474,71"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "491,43 -> 491,44 -> 500,44 -> 500,43"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "458,117 -> 458,121 -> 450,121 -> 450,125 -> 471,125 -> 471,121 -> 463,121 -> 463,117"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "458,166 -> 463,166"
    , "458,147 -> 463,147"
    , "493,27 -> 493,28 -> 512,28 -> 512,27"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "446,128 -> 446,131 -> 442,131 -> 442,138 -> 452,138 -> 452,131 -> 450,131 -> 450,128"
    , "487,48 -> 487,49 -> 494,49 -> 494,48"
    , "446,128 -> 446,131 -> 442,131 -> 442,138 -> 452,138 -> 452,131 -> 450,131 -> 450,128"
    , "461,114 -> 461,113 -> 461,114 -> 463,114 -> 463,105 -> 463,114 -> 465,114 -> 465,112 -> 465,114 -> 467,114 -> 467,105 -> 467,114 -> 469,114 -> 469,112 -> 469,114 -> 471,114 -> 471,109 -> 471,114 -> 473,114 -> 473,104 -> 473,114"
    , "487,48 -> 487,49 -> 494,49 -> 494,48"
    , "496,23 -> 496,16 -> 496,23 -> 498,23 -> 498,22 -> 498,23 -> 500,23 -> 500,17 -> 500,23 -> 502,23 -> 502,21 -> 502,23"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "496,64 -> 500,64"
    , "484,76 -> 484,80 -> 482,80 -> 482,83 -> 493,83 -> 493,80 -> 487,80 -> 487,76"
    , "451,166 -> 456,166"
    , "496,23 -> 496,16 -> 496,23 -> 498,23 -> 498,22 -> 498,23 -> 500,23 -> 500,17 -> 500,23 -> 502,23 -> 502,21 -> 502,23"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    , "446,128 -> 446,131 -> 442,131 -> 442,138 -> 452,138 -> 452,131 -> 450,131 -> 450,128"
    , "496,23 -> 496,16 -> 496,23 -> 498,23 -> 498,22 -> 498,23 -> 500,23 -> 500,17 -> 500,23 -> 502,23 -> 502,21 -> 502,23"
    , "475,61 -> 479,61"
    , "469,101 -> 469,95 -> 469,101 -> 471,101 -> 471,96 -> 471,101 -> 473,101 -> 473,96 -> 473,101 -> 475,101 -> 475,100 -> 475,101 -> 477,101 -> 477,91 -> 477,101 -> 479,101 -> 479,91 -> 479,101 -> 481,101 -> 481,98 -> 481,101"
    , "503,41 -> 503,36 -> 503,41 -> 505,41 -> 505,34 -> 505,41 -> 507,41 -> 507,40 -> 507,41 -> 509,41 -> 509,33 -> 509,41 -> 511,41 -> 511,32 -> 511,41 -> 513,41 -> 513,40 -> 513,41 -> 515,41 -> 515,31 -> 515,41 -> 517,41 -> 517,31 -> 517,41 -> 519,41 -> 519,31 -> 519,41 -> 521,41 -> 521,33 -> 521,41"
    ]
